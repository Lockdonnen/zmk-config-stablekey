/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/outputs.h>
 
 #define DEFAULT 0
 #define LOWER 1
 #define RAISE 2
 #define FUNC 3
 #define ARROWS 4
 
 / {
     keymap {
         compatible = "zmk,keymap";
 
         default_layer {

             bindings = <
 &kp ESC    &kp N1   &kp N2   &kp N3   &kp N4     &kp N5    &kp MINUS          &kp EQUAL   &kp N6    &kp N7    &kp N8    &kp N9      &kp N0      &kp BSPC
 &kp TAB    &kp Q    &kp W    &kp E    &kp R      &kp T     &sl 3              &to 3   	   &kp Y     &kp U     &kp I     &kp O       &kp P       &kp BSLH
 &kp CAPS   &kp A    &kp S    &kp D    &kp F      &kp G     &sl 2              &tog 4      &kp H     &kp J     &kp K     &kp L       &kp SEMI    &kp ENTER
 &kp LSHFT  &kp Z    &kp X    &kp C    &kp V      &kp B                                    &kp N     &kp M     &kp COMMA &kp DOT     &kp FSLH    &kp RSHIFT
 &kp LCTRL  &kp LWIN  &kp PSCRN 	  &kp LALT  					             							   &kp LBKT  &kp RBKT 	 &kp SEMI 	 &kp RCTRL
 &mo LOWER   &kp SPACE  &kp PG_DN 	  &kp PG_UP																   &kp HOME	 &kp END 	 &kp SPACE 	 &mo 2
             >;
 
             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
         };
 
         lower_layer {

             bindings = <
 &trans    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0  		  &kp EQUAL       &kp KP_NLCK  &kp UP 	 &trans     &kp KP_NLCK  	&kp KP_DIVIDE   &kp KP_ASTERISK 	&kp KP_MINUS
 &trans    &trans    &trans    &trans    &trans    &trans   	 &trans          &kp LEFT    &kp DOWN    &kp RIGHT	&kp KP_N7	 	&kp KP_N8 		&kp KP_N9          	&kp KP_PLUS
 &trans    &trans    &trans    &trans    &kp PG_UP    &kp HOME    &trans          &trans   	 &trans   	 &trans 	&kp KP_N4 		&kp KP_N5		 &kp KP_N6 			 &none
 &trans    &trans    &trans    &trans    &kp PG_DN    &kp END                             	 &trans   	 &trans 	&kp KP_N1		 &kp KP_N2 		&kp KP_N3   	 	&kp KP_ENTER
 &trans    &trans    &trans    &trans      			       					  						  		  		 &kp KP_N0  	 &none   		 &kp KP_DOT   		 &trans 
  &trans    &trans    &kp DEL    &kp GRAVE																			 &trans   		 &kp INS   		 &trans   			 &trans
             >;
         };
 
         raise_layer {

             bindings = <
 &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans          &trans   &trans     &trans    &trans  &trans   &trans   &trans
 &out OUT_TOG &out OUT_BLE &out OUT_USB  &trans       &trans       &trans       &trans          &trans    &trans    &trans    &trans   &trans    &trans    &trans
 &trans       &trans       &trans       &trans       &trans       &trans       &trans          &trans    &trans    &trans    &trans 	 &trans	 &trans    &kp C_PP
 &trans       &trans       &trans       &trans       &trans       &trans                                 &trans    &trans   &kp C_PREV &kp C_NEXT    &trans    &trans
 &trans       &trans       &trans       &trans       	          															&kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP    &trans
  &trans       &trans       &trans       &trans       	          															&trans    &trans    &trans    &trans
             >;
         };
		 
		 func_layer {

             bindings = <
 &trans  	 &kp F1		 &kp F2 		&kp F3		 &kp F4 	  &kp F5 	  &trans            &trans   &kp F6     &kp F7    &kp F8   &kp F9    &kp F10    &trans
 &trans		  &kp F11      &kp F12      &kp F13      &kp F14      &kp F15       &trans          &trans   &kp F16   &kp F17   &kp F18   &kp F19   &kp F20    &trans
 &trans       &kp F21      &kp F22      &kp F23      &kp F24       &trans       &trans          &trans    &trans    &trans 	 &trans 	&trans 	&trans    &trans
 &trans       &trans       &trans       &trans       &trans       &trans                                 &trans    &trans    &trans    &trans    &trans    &trans
 &trans       &trans       &trans       &trans       	          															&trans    &trans    &trans    &trans
  &trans       &trans       &trans       &trans       	          															&trans    &trans    &trans    &trans
             >;
         };
		 arrows_layer {

             bindings = <
 &trans  	 &trans		 &trans 		&trans		 &trans 	  &trans 	  &trans         	 &trans   &trans     &trans    &trans   &trans    &trans    &trans
 &trans		  &trans      &trans      &trans     	 &trans     &trans       &trans        		  &trans   &trans   &trans   &trans   &trans   &trans    &trans
 &trans       &trans      &trans      &trans     	 &trans       &trans       &trans       	   &trans   &trans    &trans 	 &trans 	&trans 	&trans    &trans
 &trans       &trans       &trans       &trans       &trans       &trans                                    &trans    &trans    &trans    &kp UP    &trans    &trans
 &trans       &trans       &trans       &trans       	          																&kp LEFT  &kp DOWN  &kp RIGHT &trans
  &trans       &trans       &trans       &trans       	          																&trans    &trans    &trans    &trans
             >;
         };
		 
		 
     };
 };
